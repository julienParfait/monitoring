[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julien Bidias & Jean Moyenga. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"BIDIAS J, MOYENGA J (2025). monitoring: Monitoring data collection, import, database preparation. R package version 0.1.0, https://github.com/julienParfait/monitoring.","code":"@Manual{,   title = {monitoring: Monitoring of data collection, import, and database preparation},   author = {Julien BIDIAS and Jean MOYENGA},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/julienParfait/monitoring}, }"},{"path":"/index.html","id":"monitoring-package","dir":"","previous_headings":"","what":"Monitoring of data collection, import, and database preparation","title":"Monitoring of data collection, import, and database preparation","text":"Monitoring R package designed simplify workflows involving Google Drive, GitHub, KoboToolbox. provides tools : Import CSV/XLSX files Google Drive GitHub Download XLSForm files KoboToolbox Retrieve clean KoboToolbox submission data Generate Stata .files based KoboToolbox survey structures functions particularly useful researchers, field teams, analysts working survey-based humanitarian data collection contexts.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Monitoring of data collection, import, and database preparation","text":"","code":"# Install this package library(monitoring)"},{"path":[]},{"path":"/index.html","id":"id_1-import-files-from-google-drive-with-gdrive-function","dir":"","previous_headings":"Available Functions","what":"1. Import Files from Google Drive with gdrive() function","title":"Monitoring of data collection, import, and database preparation","text":"function allows importing datasets stored Google Drive platform. supports two file formats: Excel files (.xlsx) CSV files (.csv). function particularly useful aiming create reproducible code easily update results already generated. dataset (.csv .xlsx) can stored specific folder Google Drive called R using gdrive() function. ideal building dashboards, performing data analysis, running statistical models. update data, simply replace file Google Drive new version name structure (variables sheet name, applicable). result, results R script updated automatically, without needing modify code . approach particularly useful working large datasets, preserving confidentiality (files can kept private Drive), ensuring reproducibility analysis.","code":""},{"path":"/index.html","id":"arguments","dir":"","previous_headings":"Available Functions > 1. Import Files from Google Drive with gdrive() function","what":"Arguments:","title":"Monitoring of data collection, import, and database preparation","text":"file_name: Exact name file Google Drive file_url: Shared Google Drive URL file_type: \"csv\" \"xlsx\" sheet: Sheet name Excel files get correct URL, right-click file name Google Drive folder, select “Share”. sharing settings, choose “Anyone link” copy provided link. URL look like : https://drive.google.com/file/d/1AbCDeFgHIJKLM/view?usp=sharing","code":""},{"path":"/index.html","id":"returns","dir":"","previous_headings":"Available Functions > 1. Import Files from Google Drive with gdrive() function","what":"Returns:","title":"Monitoring of data collection, import, and database preparation","text":"data.frame containing file content.","code":""},{"path":"/index.html","id":"example","dir":"","previous_headings":"Available Functions > 1. Import Files from Google Drive with gdrive() function","what":"Example:","title":"Monitoring of data collection, import, and database preparation","text":"running code , see following messages: googledrive package requesting access Google account. Enter ‘1’ start new authentication process select pre-authorized account. 1: Send browser new auth process. 2: user@gmail.com never authenticated , type 1 press Enter. open browser window can sign Google account grant access. now access data. authorized, credentials saved RStudio, future sessions need select corresponding number (e.g., 2) Google account press Enter.","code":"# Usage  data1 <-  gdrive(   file_name = \"name of the file\",   file_url = \"https://drive.google.com/file/d/XYZ/view\",   file_type = \"xlsx\",   sheet = \"name of the sheet\" )  # Example 1  data2 <-  gdrive(   file_name = \"Copie de Liste des structures\",   file_url = \"https://docs.google.com/spreadsheets/d/1XrL-THqB5TjvZx6OCw6bLfOzvBPt5MYB/edit?usp=sharing&ouid=108670923306466043393&rtpof=true&sd=true\",   file_type = \"xlsx\",   sheet = \"Liste des Restaurants\")  # Example 2  data3 <-  gdrive(   file_name = \"Copie de Base\",   file_url = \"https://drive.google.com/file/d/1ND0JR0E75MGjJiCbkk0BMipC9tixSdNq/view?usp=sharing\", file_type = \"csv\")"},{"path":"/index.html","id":"id_2-import-files-from-github-with-githb-function","dir":"","previous_headings":"Available Functions","what":"2. Import Files from GitHub with githb() function","title":"Monitoring of data collection, import, and database preparation","text":"function allows import datasets stored GitHub platform.supports two file formats: Excel files (.xlsx) CSV files (.csv). function particularly useful creating reproducible code, enabling code sharing, supporting version control, facilitating collaborative programming. also makes easy update results depend external datasets. dataset (.csv .xlsx) can stored GitHub repository accessed directly using githb() function. approach especially valuable researchers, engineers, programmers commonly work GitHub development data-sharing platform. addition, function supports: Confidentiality, since data can stored private repositories Traceability GitHub’s version history Automation, integrating seamlessly R scripts dashboards Remote access, making latest version data available anywhere Overall, githb() contributes modern, robust, maintainable workflow anyone managing data GitHub-based environment.","code":""},{"path":"/index.html","id":"arguments-1","dir":"","previous_headings":"Available Functions > 2. Import Files from GitHub with githb() function","what":"Arguments:","title":"Monitoring of data collection, import, and database preparation","text":"github_raw_url: Direct raw URL file (e.g., raw.githubusercontent.com) file_type: \"csv\" \"xlsx\" sheet: (optional) Excel sheet name (applicable)","code":""},{"path":"/index.html","id":"returns-1","dir":"","previous_headings":"Available Functions > 2. Import Files from GitHub with githb() function","what":"Returns:","title":"Monitoring of data collection, import, and database preparation","text":"data.frame imported data.","code":""},{"path":"/index.html","id":"example-1","dir":"","previous_headings":"Available Functions > 2. Import Files from GitHub with githb() function","what":"Example:","title":"Monitoring of data collection, import, and database preparation","text":"Make sure GitHub account. Open repository contains dataset. , click file (.csv .xlsx). page opens, click three dots (…) right, select “Copy permalink”. Paste link githb() function github_raw_url argument. Next, replace domain part URL github.com raw.githubusercontent.com. Example : permanent link : https://github.com/julienParfait/streaming/blob/8dae2a2d590c25188586155ed5ec687e8f4546ba/base_imputee.csv github_raw_url = “https://raw.githubusercontent.com/julienParfait/streaming/8dae2a2d590c25188586155ed5ec687e8f4546ba/base_imputee.csv” ’s — now correct raw URL. just need specify file_type, ’s Excel file, sheet name well. run function import data.","code":"# Usage  data4 <- githb(github_raw_url= \"https://raw.githubusercontent.com/user/repo/main/data.csv\",        file_type = \"csv\", # xlsx or csv       sheet = NULL)   # Example  data5 <- githb(   \"https://raw.githubusercontent.com/julienParfait/streaming/8dae2a2d590c25188586155ed5ec687e8f4546ba/base_imputee.csv\",   file_type = \"csv\" )"},{"path":"/index.html","id":"id_3-download-xlsform-from-kobotoolbox","dir":"","previous_headings":"Available Functions","what":"3. Download XLSForm from KoboToolbox","title":"Monitoring of data collection, import, and database preparation","text":"function allows download XLSForm associated questionnaire KoboToolbox platform. , user must provide username, password, form ID parameters. logged KoboToolbox platform, four main sections: Overview Form Data Settings Please click Form section. , inspect URL appears browser’s address bar. URL may look like following: https://kf.kobotoolbox.org/#/forms/aGkkhsn7XE5Q6q69SMbABH/landing case, form ID : aGkkhsn7XE5Q6q69SMbABH See example reference.","code":""},{"path":"/index.html","id":"arguments-2","dir":"","previous_headings":"Available Functions > 3. Download XLSForm from KoboToolbox","what":"Arguments:","title":"Monitoring of data collection, import, and database preparation","text":"username: KoboToolbox username password: KoboToolbox password form_id: KoboToolbox form’s asset UID","code":""},{"path":"/index.html","id":"returns-2","dir":"","previous_headings":"Available Functions > 3. Download XLSForm from KoboToolbox","what":"Returns:","title":"Monitoring of data collection, import, and database preparation","text":"string: local file path downloaded .xls file.","code":""},{"path":"/index.html","id":"example-2","dir":"","previous_headings":"Available Functions > 3. Download XLSForm from KoboToolbox","what":"Example:","title":"Monitoring of data collection, import, and database preparation","text":"","code":"xlsform(   username = \"your_username\",   password = \"your_password\",   form_id = \"a1b2c3d4e5f6g7h8i9\" )"},{"path":"/index.html","id":"id_4-import-kobotoolbox-submission-data","dir":"","previous_headings":"Available Functions","what":"4. Import KoboToolbox Submission Data","title":"Monitoring of data collection, import, and database preparation","text":"function allows download data associated form KoboToolbox platform. , user must provide following parameters: username: KoboToolbox account username password: KoboToolbox account password form_id: unique ID form server_type: either “kobotoolbox” (default) “humanitarian” output_dir (optional): local directory file saved logged KoboToolbox, interface contains four main sections: Overview Form Data Settings Click Form section inspect URL shown browser’s address bar. may look like : https://kf.kobotoolbox.org/#/forms/aGkkhsn7XE5Q6q69SMbABH/landing case, form ID : aGkkhsn7XE5Q6q69SMbABH determine correct server type, inspect domain URL: contains kf.kobotoolbox.org kc.kobotoolbox.org, set server_type = “kobotoolbox” (Global server) contains eu.kobotoolbox.org, set server_type = “humanitarian” (EU humanitarian server) important function monitoring evaluation field surveys. monitoring indicators already computed using R commands, can simply re-import updated data using function, results automatically refreshed. Note: function currently support datasets contain begin repeat groups. See example reference.","code":""},{"path":"/index.html","id":"arguments-3","dir":"","previous_headings":"Available Functions > 4. Import KoboToolbox Submission Data","what":"Arguments:","title":"Monitoring of data collection, import, and database preparation","text":"username: KoboToolbox username password: KoboToolbox password form_id: KoboToolbox form ID (asset UID) server: \"kobotoolbox\" (default) \"humanitarian\" output_dir: (reserved future use) Must valid directory","code":""},{"path":"/index.html","id":"returns-3","dir":"","previous_headings":"Available Functions > 4. Import KoboToolbox Submission Data","what":"Returns:","title":"Monitoring of data collection, import, and database preparation","text":"cleaned data.frame NULL data available.","code":""},{"path":"/index.html","id":"column-cleaning-rules","dir":"","previous_headings":"Available Functions > 4. Import KoboToolbox Submission Data","what":"Column cleaning rules:","title":"Monitoring of data collection, import, and database preparation","text":"Removes prefixes last / Trims leading/trailing underscores Replaces repeated underscores single _ Ensures column name uniqueness","code":""},{"path":"/index.html","id":"example-3","dir":"","previous_headings":"Available Functions > 4. Import KoboToolbox Submission Data","what":"Example:","title":"Monitoring of data collection, import, and database preparation","text":"","code":"df <- kobo(   username = \"my_user\",   password = \"my_password\",   form_id = \"a1b2c3d4e5f6g7h8i9\",   server = \"humanitarian\" )"},{"path":"/index.html","id":"id_5-generate-stata-do-file-with-statalab-function","dir":"","previous_headings":"Available Functions","what":"5. Generate Stata .do File with statalab() function","title":"Monitoring of data collection, import, and database preparation","text":"function generates Stata -file contains path dataset, complete set labeling commands, value labeling instructions based corresponding XLSForm. specifically, function builds script : assigns variable labels using full question text XLSForm, assigns value labels categorical variables using defined choices, specifies location source dataset read Stata. achieve , function requires three arguments: path dataset Excel format (usually exported KoboToolbox, either manually using kobo() function), path associated XLSForm (prepared xlsform() function), output directory generated .file saved. function particularly useful researchers, econometricians, statistical consultants use Stata data analysis workflow. allows avoid manually writing labeling commands, can time-consuming error-prone—especially working large surveys. Another major benefit function works even without deploying form online. long dataset corresponding XLSForm available locally, can generate labeling script apply data. makes practical tool offline workflows, archived datasets, retrospective labeling previously collected data. Furthermore, automating labeling process, function promotes reproducibility, ensures data consistency, improves data readability downstream users. also facilitates collaboration, since labeled datasets much easier interpret third parties may familiar original questionnaire. Voici un exemple clair et structuré que tu peux inclure dans ton fichier README.Rmd pour illustrer l’usage de ta fonction qui génère un -file pour Stata à partir d’un fichier de données .xlsx et de son XLSForm. L’exemple inclut un contexte d’enquête, deux petits tableaux simulés, et un bloc de code R montrant l’appel de ta fonction.","code":""},{"path":"/index.html","id":"use-case-labeling-a-survey-dataset-for-stata-analysis","dir":"","previous_headings":"Available Functions","what":"Use case: Labeling a survey dataset for Stata analysis","title":"Monitoring of data collection, import, and database preparation","text":"Suppose conducted household survey exported data KoboToolbox Excel file. also corresponding XLSForm used design questionnaire. Now want label variables values Stata using original questions choices—without manually. function automates process generating .file ready use Stata.","code":""},{"path":[]},{"path":[]},{"path":"/index.html","id":"xlsform-survey_formxlsx","dir":"","previous_headings":"Available Functions > Example Files","what":"XLSForm: survey_form.xlsx","title":"Monitoring of data collection, import, and database preparation","text":"survey sheet choices sheet","code":""},{"path":"/index.html","id":"r-code-to-generate-stata-do-file","dir":"","previous_headings":"Available Functions","what":"R code to generate Stata do-file","title":"Monitoring of data collection, import, and database preparation","text":"running function, file called labeling.created output/ folder. open Stata run , dataset loaded labels applied follows: variable gender labeled “gender?” values 1 2 labeled “Male” “Female” Similarly, education labeled “education level?” values properly tagged.","code":"generate_stata_do(   data_path = \"data/household_data.xlsx\",   xlsform_path = \"forms/survey_form.xlsx\",   output_dir = \"output\" )"},{"path":"/index.html","id":"advantages","dir":"","previous_headings":"Available Functions","what":"Advantages","title":"Monitoring of data collection, import, and database preparation","text":"Saves hours manual labeling work Ensures consistency form dataset Works XLSForm-compliant survey (KoboToolbox local) Ideal large-scale surveys teams using R + Stata workflows","code":""},{"path":"/index.html","id":"arguments-4","dir":"","previous_headings":"Available Functions > Advantages","what":"Arguments:","title":"Monitoring of data collection, import, and database preparation","text":"data_path: Path Excel data export xlsform_path: Path corresponding XLSForm (optional) output_path: Output file path (default: \"statalab.\")","code":""},{"path":"/index.html","id":"returns-4","dir":"","previous_headings":"Available Functions > Advantages","what":"Returns:","title":"Monitoring of data collection, import, and database preparation","text":"R object returned; writes .file disk.","code":""},{"path":"/index.html","id":"example-4","dir":"","previous_headings":"Available Functions > Advantages","what":"Example:","title":"Monitoring of data collection, import, and database preparation","text":"","code":"statalab(   data_path = \"data.xlsx\",   xlsform_path = \"questionnaire.xlsx\",   output_path = \"prepare_data.do\" )"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Monitoring of data collection, import, and database preparation","text":"MIT License © [Julien BIDIAS, Jean MOYENGA] See LICENSE file details.","code":""},{"path":"/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"Monitoring of data collection, import, and database preparation","text":"bugs, issues, suggestions, open issue GitHub repository: https://github.com/julienParfait/monitoring/","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 monitoring authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/gdrive.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a CSV or Excel file from Google Drive (by name or URL) — gdrive","title":"Import a CSV or Excel file from Google Drive (by name or URL) — gdrive","text":"function allows importing `.csv` `.xlsx` file Google Drive, using either exact file name (authenticated Google Drive) shared public URL. supports custom delimiters CSV files sheet selection Excel files.","code":""},{"path":"/reference/gdrive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a CSV or Excel file from Google Drive (by name or URL) — gdrive","text":"","code":"gdrive(   file_name = NULL,   file_url = NULL,   file_type = c(\"csv\", \"xlsx\"),   sheet = NULL,   delim = \",\" )"},{"path":"/reference/gdrive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a CSV or Excel file from Google Drive (by name or URL) — gdrive","text":"file_name Character. Exact name file Google Drive (optional `file_url` provided). file_url Character. Shared URL file Google Drive (optional `file_name` provided). file_type Character. File type import: either `\"csv\"` `\"xlsx\"`. sheet Character. Sheet name read (used `.xlsx` files; optional). delim Character. Field delimiter used CSV file (default comma `\",\"`).","code":""},{"path":"/reference/gdrive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a CSV or Excel file from Google Drive (by name or URL) — gdrive","text":"`data.frame` containing imported data.","code":""},{"path":"/reference/gdrive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a CSV or Excel file from Google Drive (by name or URL) — gdrive","text":"","code":"if (FALSE) { # \\dontrun{ # Import a CSV file by name gdrive(file_name = \"my_data.csv\", file_type = \"csv\")  # Import a CSV file by URL, using semicolon as delimiter gdrive(   file_url = \"https://drive.google.com/file/d/FILE_ID/view?usp=sharing\",   file_type = \"csv\",   delim = \";\" )  # Import an Excel file and select a specific sheet gdrive(   file_url = \"https://drive.google.com/file/d/FILE_ID/view?usp=sharing\",   file_type = \"xlsx\",   sheet = \"Sheet1\" ) } # }"},{"path":"/reference/githb.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a CSV or Excel file from GitHub — githb","title":"Import a CSV or Excel file from GitHub — githb","text":"function allows importing CSV Excel file GitHub repository, using raw file URL. supports custom delimiters CSV files reads Excel sheets name.","code":""},{"path":"/reference/githb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a CSV or Excel file from GitHub — githb","text":"","code":"githb(github_raw_url, file_type = c(\"csv\", \"xlsx\"), sheet = NULL, delim = \",\")"},{"path":"/reference/githb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a CSV or Excel file from GitHub — githb","text":"github_raw_url Character. direct \"raw\" URL file GitHub repository. must use raw version URL (starting `https://raw.githubusercontent.com/`). file_type Character. File type: either `\"csv\"` `\"xlsx\"`. sheet Character. Excel sheet name read (optional, used `.xlsx` files). delim Character. Field delimiter used CSV file (default comma `\",\"`).","code":""},{"path":"/reference/githb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a CSV or Excel file from GitHub — githb","text":"`data.frame` containing imported data.","code":""},{"path":"/reference/githb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a CSV or Excel file from GitHub — githb","text":"","code":"if (FALSE) { # \\dontrun{ # CSV file from GitHub (raw URL) githb(   github_raw_url = \"https://raw.githubusercontent.com/user/repo/branch/data.csv\",   file_type = \"csv\",   delim = \",\" )  # Excel file from GitHub (raw URL) githb(   github_raw_url = \"https://raw.githubusercontent.com/user/repo/branch/data.xlsx\",   file_type = \"xlsx\",   sheet = \"Sheet1\" ) } # }"},{"path":"/reference/kobo.html","id":null,"dir":"Reference","previous_headings":"","what":"Import submission data from KoboToolbox — kobo","title":"Import submission data from KoboToolbox — kobo","text":"function connects KoboToolbox API downloads submission data specified form (identified asset UID). returns data data frame, cleaned column names.","code":""},{"path":"/reference/kobo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import submission data from KoboToolbox — kobo","text":"","code":"kobo(username, password, form_id, server = \"kobotoolbox\", output_dir = getwd())"},{"path":"/reference/kobo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import submission data from KoboToolbox — kobo","text":"username Character. KoboToolbox username. password Character. KoboToolbox password. form_id Character. unique identifier KoboToolbox form (asset UID). server Character. Either \"kobotoolbox\" (default) \"humanitarian\" specify server type. output_dir Character. Directory files might written (reserved future use). Must exist. Defaults current working directory.","code":""},{"path":"/reference/kobo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import submission data from KoboToolbox — kobo","text":"data frame containing form submission data. Returns NULL data available. Stops informative error message request fails.","code":""},{"path":"/reference/kobo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import submission data from KoboToolbox — kobo","text":"Column names cleaned : Removing prefix last `/` Removing leading trailing underscores Replacing multiple consecutive underscores single underscore Ensuring uniqueness column names","code":""},{"path":"/reference/kobo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import submission data from KoboToolbox — kobo","text":"","code":"if (FALSE) { # \\dontrun{ df <- kobo(   username = \"my_user\",   password = \"my_password\",   form_id = \"a1b2c3d4e5f6g7h8i9\",   server = \"humanitarian\" ) head(df) } # }"},{"path":"/reference/monitoring-package.html","id":null,"dir":"Reference","previous_headings":"","what":"monitoring: Monitoring of data collection, import, and database preparation — monitoring-package","title":"monitoring: Monitoring of data collection, import, and database preparation — monitoring-package","text":"Provides tools importing datasets various sources, monitoring data collection, processing data.","code":""},{"path":[]},{"path":"/reference/statalab.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Stata .do file to prepare a dataset exported from KoboToolbox — statalab","title":"Generate a Stata .do file to prepare a dataset exported from KoboToolbox — statalab","text":"function creates Stata `.` file automates import Excel file, variable renaming, adding variable labels, defining value labels (`label define`), applying labels variables (`label values`) using exported dataset associated XLSForm.","code":""},{"path":"/reference/statalab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Stata .do file to prepare a dataset exported from KoboToolbox — statalab","text":"","code":"statalab(data_path, xlsform_path = NULL, output_path = \"statalab.do\")"},{"path":"/reference/statalab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Stata .do file to prepare a dataset exported from KoboToolbox — statalab","text":"data_path Path Excel file containing exported data (typically KoboToolbox). xlsform_path Path XLSForm file used generate survey (optional). output_path Path save generated `.` file (default: `\"statalab.\"`).","code":""},{"path":"/reference/statalab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Stata .do file to prepare a dataset exported from KoboToolbox — statalab","text":"R object returned. function writes `.` Stata file disk.","code":""},{"path":"/reference/statalab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Stata .do file to prepare a dataset exported from KoboToolbox — statalab","text":"","code":"if (FALSE) { # \\dontrun{ statalab(   data_path = \"data.xlsx\",   xlsform_path = \"questionnaire.xlsx\",   output_path = \"prepare_data.do\" ) } # }"},{"path":"/reference/xlsform.html","id":null,"dir":"Reference","previous_headings":"","what":"Download XLSForm from KoboToolbox — xlsform","title":"Download XLSForm from KoboToolbox — xlsform","text":"function connects KoboToolbox API download XLSForm file associated given form ID (asset UID). file saved locally form ID filename `.xls` extension.","code":""},{"path":"/reference/xlsform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download XLSForm from KoboToolbox — xlsform","text":"","code":"xlsform(username, password, form_id)"},{"path":"/reference/xlsform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download XLSForm from KoboToolbox — xlsform","text":"username Character. KoboToolbox username. password Character. KoboToolbox password. form_id Character. unique identifier KoboToolbox form (asset UID).","code":""},{"path":"/reference/xlsform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download XLSForm from KoboToolbox — xlsform","text":"character string representing path downloaded XLSForm file. function stops informative error message download fails.","code":""},{"path":"/reference/xlsform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download XLSForm from KoboToolbox — xlsform","text":"function constructs URL XLSForm export performs authenticated GET request. XLSForm saved form ID filename, overwriting existing file name.","code":""},{"path":"/reference/xlsform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download XLSForm from KoboToolbox — xlsform","text":"","code":"if (FALSE) { # \\dontrun{ # Download XLSForm using valid KoboToolbox credentials and form ID file_path <- xlsform(   username = \"your_username\",   password = \"your_password\",   form_id = \"a1b2c3d4e5f6g7h8i9\" ) print(file_path) } # }"}]
